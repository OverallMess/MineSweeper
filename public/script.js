(()=>{"use strict";var __webpack_modules__={607:()=>{eval("\nvar _a;\nlet toggle = false;\n(_a = document.getElementById('toggle-bombs')) === null || _a === void 0 ? void 0 : _a.addEventListener('click', e => {\n    toggle = !toggle;\n    if (toggle)\n        revealBombs();\n    else\n        hideBombs();\n});\nconst board = document.querySelector('.board');\nlet buttons = [];\ndocument.addEventListener('DOMContentLoaded', () => {\n    initBoard();\n    getButtonReferences();\n    initBombs(5);\n    board.addEventListener('click', handleButtonClick);\n    board.addEventListener('contextmenu', handleRightClick);\n});\nfunction getButtonReferences() {\n    buttons = Array.from(board.querySelectorAll('.block'));\n}\nfunction initBoard() {\n    let output = '';\n    for (let i = 0; i < 100; ++i)\n        output += `\n          <div data-id=${i} class=\"block\"></div>\n        `;\n    board.innerHTML = output;\n}\nfunction initBombs(n) {\n    for (let i = 0; i < n; ++i) {\n        const rand = getRandomInt(0, 99);\n        buttons[rand].setAttribute('data-bomb', 'true');\n        buttons[rand].classList.add('bomb');\n    }\n}\nfunction handleRightClick(e) {\n    e.preventDefault();\n    const target = e.target;\n    if (!target.classList.contains('block'))\n        return;\n    if (target.dataset.flag) {\n        target.removeAttribute('data-flag');\n        target.classList.remove('flag');\n        target.textContent = '';\n    }\n    else {\n        target.setAttribute('data-flag', 'true');\n        target.classList.add('flag');\n        target.textContent = 'F';\n    }\n}\nfunction handleButtonClick(e) {\n    const target = e.target;\n    if (!target.classList.contains('block'))\n        return;\n    if (target.dataset.flag) {\n        return;\n    }\n    if (checkIfTargetIsBomb(target)) {\n        handleGameOver();\n        console.log('GAME OVER');\n        return;\n    }\n    checkSurroundingBlocks(target);\n    if (checkIfWon()) {\n        revealBombs();\n        alert('YOU HAVE WON!');\n        return;\n    }\n}\nfunction checkSurroundingBlocks(block) {\n    const surroundingBlocks = getSurroundingBlocks(block);\n    block.classList.add('marked');\n    const numBombs = countBombs(surroundingBlocks);\n    if (numBombs > 0) {\n        block.classList.add('bomb-near-by');\n        block.textContent = String(numBombs);\n        return;\n    }\n    block.classList.add('no-bomb');\n    Array.from(surroundingBlocks).forEach((bl) => {\n        checkSurroundingBlocks(bl);\n    });\n}\nfunction checkIfTargetIsBomb(target) {\n    if (target.dataset.bomb)\n        return true;\n    return false;\n}\nfunction getSurroundingBlocks(block) {\n    const blockCoord = parseInt(block.dataset.id);\n    const coords = [];\n    let offset = -10;\n    if (endsWith(blockCoord, 0)) {\n        checkValidCoord(coords, blockCoord - 10);\n        checkValidCoord(coords, blockCoord - 10 + 1);\n        checkValidCoord(coords, blockCoord + 1);\n        checkValidCoord(coords, blockCoord + 10 + 1);\n        checkValidCoord(coords, blockCoord + 10);\n    }\n    else if (endsWith(blockCoord, 9)) {\n        checkValidCoord(coords, blockCoord - 10);\n        checkValidCoord(coords, blockCoord - 10 - 1);\n        checkValidCoord(coords, blockCoord - 1);\n        checkValidCoord(coords, blockCoord + 10 - 1);\n        checkValidCoord(coords, blockCoord + 10);\n    }\n    else if (startsWith(blockCoord, 9)) {\n        checkValidCoord(coords, blockCoord - 1);\n        checkValidCoord(coords, blockCoord - 10 - 1);\n        checkValidCoord(coords, blockCoord - 10);\n        checkValidCoord(coords, blockCoord - 10 + 1);\n        checkValidCoord(coords, blockCoord + 1);\n    }\n    else if ((startsWith(blockCoord, 9), endsWith(blockCoord, 0))) {\n        checkValidCoord(coords, blockCoord - 10);\n        checkValidCoord(coords, blockCoord - 10 + 1);\n        checkValidCoord(coords, blockCoord + 1);\n    }\n    else if ((startsWith(blockCoord, 9), endsWith(blockCoord, 9))) {\n        checkValidCoord(coords, blockCoord - 1);\n        checkValidCoord(coords, blockCoord - 10 - 1);\n        checkValidCoord(coords, blockCoord - 10);\n    }\n    else if (endsWith(blockCoord, 9)) {\n        checkValidCoord(coords, blockCoord - 10);\n        checkValidCoord(coords, blockCoord - 10 - 1);\n        checkValidCoord(coords, blockCoord - 1);\n        checkValidCoord(coords, blockCoord + 10 - 1);\n        checkValidCoord(coords, blockCoord + 10);\n    }\n    else {\n        for (let i = 0; i < 3; ++i) {\n            for (let j = -1; j < 2; ++j) {\n                const coord = blockCoord + offset + j;\n                if (coord >= 0 && coord <= 99) {\n                    if (!Array.from(buttons[coord].classList).includes('marked'))\n                        coords.push(coord);\n                }\n            }\n            offset += 10;\n        }\n    }\n    return findCorrespondingBlocks(coords);\n}\nfunction checkValidCoord(coords, coord) {\n    if (coord >= 0 && coord <= 99) {\n        if (!Array.from(buttons[coord].classList).includes('marked'))\n            coords.push(coord);\n    }\n}\nfunction countBombs(blocks) {\n    let num = 0;\n    Array.from(blocks).forEach((block) => {\n        if (checkIfTargetIsBomb(block))\n            ++num;\n    });\n    return num;\n}\nfunction checkIfBlocksAreBombs(blocks) {\n    const numBombs = countBombs(blocks);\n    if (numBombs > 0) {\n        return numBombs;\n    }\n    for (let block of blocks) {\n        const anotherBlocks = getSurroundingBlocks(block);\n        checkIfBlocksAreBombs(anotherBlocks);\n    }\n}\nfunction findCorrespondingBlocks(coords) {\n    const blocks = [];\n    buttons.forEach((btn) => {\n        coords.forEach((crd) => {\n            if (parseInt(btn.dataset.id) === crd)\n                blocks.push(btn);\n        });\n    });\n    return blocks;\n}\nfunction handleGameOver() {\n    board.removeEventListener('click', handleButtonClick);\n    revealBombs();\n}\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction endsWith(num1, num2) {\n    if (num1 % 10 === num2)\n        return true;\n    return false;\n}\nfunction startsWith(num1, num2) {\n    if (Math.floor(num1 / 10) === num2)\n        return true;\n    return false;\n}\nfunction checkIfWon() {\n    let over = true;\n    buttons.forEach((button) => {\n        if (!button.dataset.bomb) {\n            over = over && button.classList.contains('marked');\n        }\n    });\n    return over;\n}\nfunction revealBombs() {\n    buttons.forEach((button) => {\n        if (button.dataset.bomb) {\n            button.style.backgroundColor = '#8f23238e';\n        }\n    });\n}\nfunction hideBombs() {\n    buttons.forEach((button) => {\n        if (button.dataset.bomb) {\n            button.style.backgroundColor = '#2e42585e';\n        }\n    });\n}\n// test(90);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///607\n")}},__webpack_exports__={};__webpack_modules__[607]()})();