(()=>{"use strict";var __webpack_modules__={607:()=>{eval("\nconst board = document.querySelector('.board');\nlet buttons = [];\ndocument.addEventListener('DOMContentLoaded', () => {\n    initBoard();\n    getButtonReferences();\n    initBombs(20);\n    board.addEventListener('click', handleButtonClick);\n});\nfunction getButtonReferences() {\n    buttons = Array.from(board.querySelectorAll('.block'));\n}\nfunction initBoard() {\n    let output = '';\n    for (let i = 0; i < 100; ++i)\n        output += `\n          <div data-id=${i} class=\"block\"></div>\n        `;\n    board.innerHTML = output;\n}\nfunction initBombs(n) {\n    for (let i = 0; i < n; ++i) {\n        const rand = getRandomInt(0, 99);\n        buttons[rand].setAttribute('data-bomb', 'true');\n        buttons[rand].classList.add('bomb');\n    }\n}\nfunction handleButtonClick(e) {\n    const target = e.target;\n    if (!target.classList.contains('block'))\n        return;\n    if (checkIfTargetIsBomb(target)) {\n        handleGameOver();\n        return;\n    }\n    checkSurroundingBlocks(target);\n}\nfunction checkSurroundingBlocks(block) {\n    const surroundingBlocks = getSurroundingBlocks(block);\n    block.classList.add('marked');\n    console.log(surroundingBlocks);\n    const numBombs = countBombs(surroundingBlocks);\n    console.log(numBombs);\n    if (numBombs > 0) {\n        block.classList.add('bomb-near-by');\n        block.textContent = String(numBombs);\n        return;\n    }\n    block.classList.add('no-bomb');\n    Array.from(surroundingBlocks).forEach((bl) => {\n        checkSurroundingBlocks(bl);\n    });\n}\nfunction checkIfTargetIsBomb(target) {\n    // if (!target.dataset.bomb) {\n    //   target.classList.add('marked');\n    // }\n    if (target.dataset.bomb)\n        return true;\n    return false;\n}\nfunction getSurroundingBlocks(block) {\n    const blockCoord = parseInt(block.dataset.id);\n    const coords = [];\n    let offset = -10;\n    if (endsWith(blockCoord, 0)) {\n        checkValidCoord(coords, blockCoord - 10);\n        checkValidCoord(coords, blockCoord - 10 + 1);\n        checkValidCoord(coords, blockCoord + 1);\n        checkValidCoord(coords, blockCoord + 10 + 1);\n        checkValidCoord(coords, blockCoord + 10);\n    }\n    else if (endsWith(blockCoord, 9)) {\n        checkValidCoord(coords, blockCoord - 10);\n        checkValidCoord(coords, blockCoord - 10 - 1);\n        checkValidCoord(coords, blockCoord - 1);\n        checkValidCoord(coords, blockCoord + 10 - 1);\n        checkValidCoord(coords, blockCoord + 10);\n    }\n    else if (startsWith(blockCoord, 9)) {\n        checkValidCoord(coords, blockCoord - 1);\n        checkValidCoord(coords, blockCoord - 10 - 1);\n        checkValidCoord(coords, blockCoord - 10);\n        checkValidCoord(coords, blockCoord - 10 + 1);\n        checkValidCoord(coords, blockCoord + 1);\n    }\n    else if ((startsWith(blockCoord, 9), endsWith(blockCoord, 0))) {\n        checkValidCoord(coords, blockCoord - 10);\n        checkValidCoord(coords, blockCoord - 10 + 1);\n        checkValidCoord(coords, blockCoord + 1);\n    }\n    else if ((startsWith(blockCoord, 9), endsWith(blockCoord, 9))) {\n        checkValidCoord(coords, blockCoord - 1);\n        checkValidCoord(coords, blockCoord - 10 - 1);\n        checkValidCoord(coords, blockCoord - 10);\n    }\n    else if (endsWith(blockCoord, 9)) {\n        checkValidCoord(coords, blockCoord - 10);\n        checkValidCoord(coords, blockCoord - 10 - 1);\n        checkValidCoord(coords, blockCoord - 1);\n        checkValidCoord(coords, blockCoord + 10 - 1);\n        checkValidCoord(coords, blockCoord + 10);\n    }\n    else {\n        for (let i = 0; i < 3; ++i) {\n            for (let j = -1; j < 2; ++j) {\n                const coord = blockCoord + offset + j;\n                if (coord >= 0 && coord <= 99) {\n                    if (!Array.from(buttons[coord].classList).includes('marked'))\n                        coords.push(coord);\n                }\n            }\n            offset += 10;\n        }\n    }\n    return findCorrespondingBlocks(coords);\n}\nfunction checkValidCoord(coords, coord) {\n    if (coord >= 0 && coord <= 99) {\n        if (!Array.from(buttons[coord].classList).includes('marked'))\n            coords.push(coord);\n    }\n}\nfunction countBombs(blocks) {\n    let num = 0;\n    Array.from(blocks).forEach((block) => {\n        if (checkIfTargetIsBomb(block))\n            ++num;\n    });\n    return num;\n}\nfunction checkIfBlocksAreBombs(blocks) {\n    const numBombs = countBombs(blocks);\n    if (numBombs > 0) {\n        return numBombs;\n    }\n    for (let block of blocks) {\n        const anotherBlocks = getSurroundingBlocks(block);\n        checkIfBlocksAreBombs(anotherBlocks);\n    }\n}\nfunction findCorrespondingBlocks(coords) {\n    const blocks = [];\n    buttons.forEach((btn) => {\n        coords.forEach((crd) => {\n            if (parseInt(btn.dataset.id) === crd)\n                blocks.push(btn);\n        });\n    });\n    return blocks;\n}\nfunction handleGameOver() {\n    console.log('GAME OVER');\n    board.removeEventListener('click', handleButtonClick);\n}\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction endsWith(num1, num2) {\n    if (num1 % 10 === num2)\n        return true;\n    return false;\n}\nfunction startsWith(num1, num2) {\n    if (Math.floor(num1 / 10) === num2)\n        return true;\n    return false;\n}\n// test(90);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjA3LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixTQUFTO0FBQzdCO0FBQ0EseUJBQXlCLEdBQUc7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLE9BQU87QUFDL0IsNkJBQTZCLE9BQU87QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21pbmVzd2VlcGVyLy4vc3JjL2luZGV4LnRzP2U5NGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCBib2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ib2FyZCcpO1xubGV0IGJ1dHRvbnMgPSBbXTtcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XG4gICAgaW5pdEJvYXJkKCk7XG4gICAgZ2V0QnV0dG9uUmVmZXJlbmNlcygpO1xuICAgIGluaXRCb21icygyMCk7XG4gICAgYm9hcmQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVCdXR0b25DbGljayk7XG59KTtcbmZ1bmN0aW9uIGdldEJ1dHRvblJlZmVyZW5jZXMoKSB7XG4gICAgYnV0dG9ucyA9IEFycmF5LmZyb20oYm9hcmQucXVlcnlTZWxlY3RvckFsbCgnLmJsb2NrJykpO1xufVxuZnVuY3Rpb24gaW5pdEJvYXJkKCkge1xuICAgIGxldCBvdXRwdXQgPSAnJztcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwMDsgKytpKVxuICAgICAgICBvdXRwdXQgKz0gYFxuICAgICAgICAgIDxkaXYgZGF0YS1pZD0ke2l9IGNsYXNzPVwiYmxvY2tcIj48L2Rpdj5cbiAgICAgICAgYDtcbiAgICBib2FyZC5pbm5lckhUTUwgPSBvdXRwdXQ7XG59XG5mdW5jdGlvbiBpbml0Qm9tYnMobikge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGNvbnN0IHJhbmQgPSBnZXRSYW5kb21JbnQoMCwgOTkpO1xuICAgICAgICBidXR0b25zW3JhbmRdLnNldEF0dHJpYnV0ZSgnZGF0YS1ib21iJywgJ3RydWUnKTtcbiAgICAgICAgYnV0dG9uc1tyYW5kXS5jbGFzc0xpc3QuYWRkKCdib21iJyk7XG4gICAgfVxufVxuZnVuY3Rpb24gaGFuZGxlQnV0dG9uQ2xpY2soZSkge1xuICAgIGNvbnN0IHRhcmdldCA9IGUudGFyZ2V0O1xuICAgIGlmICghdGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnYmxvY2snKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmIChjaGVja0lmVGFyZ2V0SXNCb21iKHRhcmdldCkpIHtcbiAgICAgICAgaGFuZGxlR2FtZU92ZXIoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjaGVja1N1cnJvdW5kaW5nQmxvY2tzKHRhcmdldCk7XG59XG5mdW5jdGlvbiBjaGVja1N1cnJvdW5kaW5nQmxvY2tzKGJsb2NrKSB7XG4gICAgY29uc3Qgc3Vycm91bmRpbmdCbG9ja3MgPSBnZXRTdXJyb3VuZGluZ0Jsb2NrcyhibG9jayk7XG4gICAgYmxvY2suY2xhc3NMaXN0LmFkZCgnbWFya2VkJyk7XG4gICAgY29uc29sZS5sb2coc3Vycm91bmRpbmdCbG9ja3MpO1xuICAgIGNvbnN0IG51bUJvbWJzID0gY291bnRCb21icyhzdXJyb3VuZGluZ0Jsb2Nrcyk7XG4gICAgY29uc29sZS5sb2cobnVtQm9tYnMpO1xuICAgIGlmIChudW1Cb21icyA+IDApIHtcbiAgICAgICAgYmxvY2suY2xhc3NMaXN0LmFkZCgnYm9tYi1uZWFyLWJ5Jyk7XG4gICAgICAgIGJsb2NrLnRleHRDb250ZW50ID0gU3RyaW5nKG51bUJvbWJzKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBibG9jay5jbGFzc0xpc3QuYWRkKCduby1ib21iJyk7XG4gICAgQXJyYXkuZnJvbShzdXJyb3VuZGluZ0Jsb2NrcykuZm9yRWFjaCgoYmwpID0+IHtcbiAgICAgICAgY2hlY2tTdXJyb3VuZGluZ0Jsb2NrcyhibCk7XG4gICAgfSk7XG59XG5mdW5jdGlvbiBjaGVja0lmVGFyZ2V0SXNCb21iKHRhcmdldCkge1xuICAgIC8vIGlmICghdGFyZ2V0LmRhdGFzZXQuYm9tYikge1xuICAgIC8vICAgdGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ21hcmtlZCcpO1xuICAgIC8vIH1cbiAgICBpZiAodGFyZ2V0LmRhdGFzZXQuYm9tYilcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZnVuY3Rpb24gZ2V0U3Vycm91bmRpbmdCbG9ja3MoYmxvY2spIHtcbiAgICBjb25zdCBibG9ja0Nvb3JkID0gcGFyc2VJbnQoYmxvY2suZGF0YXNldC5pZCk7XG4gICAgY29uc3QgY29vcmRzID0gW107XG4gICAgbGV0IG9mZnNldCA9IC0xMDtcbiAgICBpZiAoZW5kc1dpdGgoYmxvY2tDb29yZCwgMCkpIHtcbiAgICAgICAgY2hlY2tWYWxpZENvb3JkKGNvb3JkcywgYmxvY2tDb29yZCAtIDEwKTtcbiAgICAgICAgY2hlY2tWYWxpZENvb3JkKGNvb3JkcywgYmxvY2tDb29yZCAtIDEwICsgMSk7XG4gICAgICAgIGNoZWNrVmFsaWRDb29yZChjb29yZHMsIGJsb2NrQ29vcmQgKyAxKTtcbiAgICAgICAgY2hlY2tWYWxpZENvb3JkKGNvb3JkcywgYmxvY2tDb29yZCArIDEwICsgMSk7XG4gICAgICAgIGNoZWNrVmFsaWRDb29yZChjb29yZHMsIGJsb2NrQ29vcmQgKyAxMCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGVuZHNXaXRoKGJsb2NrQ29vcmQsIDkpKSB7XG4gICAgICAgIGNoZWNrVmFsaWRDb29yZChjb29yZHMsIGJsb2NrQ29vcmQgLSAxMCk7XG4gICAgICAgIGNoZWNrVmFsaWRDb29yZChjb29yZHMsIGJsb2NrQ29vcmQgLSAxMCAtIDEpO1xuICAgICAgICBjaGVja1ZhbGlkQ29vcmQoY29vcmRzLCBibG9ja0Nvb3JkIC0gMSk7XG4gICAgICAgIGNoZWNrVmFsaWRDb29yZChjb29yZHMsIGJsb2NrQ29vcmQgKyAxMCAtIDEpO1xuICAgICAgICBjaGVja1ZhbGlkQ29vcmQoY29vcmRzLCBibG9ja0Nvb3JkICsgMTApO1xuICAgIH1cbiAgICBlbHNlIGlmIChzdGFydHNXaXRoKGJsb2NrQ29vcmQsIDkpKSB7XG4gICAgICAgIGNoZWNrVmFsaWRDb29yZChjb29yZHMsIGJsb2NrQ29vcmQgLSAxKTtcbiAgICAgICAgY2hlY2tWYWxpZENvb3JkKGNvb3JkcywgYmxvY2tDb29yZCAtIDEwIC0gMSk7XG4gICAgICAgIGNoZWNrVmFsaWRDb29yZChjb29yZHMsIGJsb2NrQ29vcmQgLSAxMCk7XG4gICAgICAgIGNoZWNrVmFsaWRDb29yZChjb29yZHMsIGJsb2NrQ29vcmQgLSAxMCArIDEpO1xuICAgICAgICBjaGVja1ZhbGlkQ29vcmQoY29vcmRzLCBibG9ja0Nvb3JkICsgMSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKChzdGFydHNXaXRoKGJsb2NrQ29vcmQsIDkpLCBlbmRzV2l0aChibG9ja0Nvb3JkLCAwKSkpIHtcbiAgICAgICAgY2hlY2tWYWxpZENvb3JkKGNvb3JkcywgYmxvY2tDb29yZCAtIDEwKTtcbiAgICAgICAgY2hlY2tWYWxpZENvb3JkKGNvb3JkcywgYmxvY2tDb29yZCAtIDEwICsgMSk7XG4gICAgICAgIGNoZWNrVmFsaWRDb29yZChjb29yZHMsIGJsb2NrQ29vcmQgKyAxKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoKHN0YXJ0c1dpdGgoYmxvY2tDb29yZCwgOSksIGVuZHNXaXRoKGJsb2NrQ29vcmQsIDkpKSkge1xuICAgICAgICBjaGVja1ZhbGlkQ29vcmQoY29vcmRzLCBibG9ja0Nvb3JkIC0gMSk7XG4gICAgICAgIGNoZWNrVmFsaWRDb29yZChjb29yZHMsIGJsb2NrQ29vcmQgLSAxMCAtIDEpO1xuICAgICAgICBjaGVja1ZhbGlkQ29vcmQoY29vcmRzLCBibG9ja0Nvb3JkIC0gMTApO1xuICAgIH1cbiAgICBlbHNlIGlmIChlbmRzV2l0aChibG9ja0Nvb3JkLCA5KSkge1xuICAgICAgICBjaGVja1ZhbGlkQ29vcmQoY29vcmRzLCBibG9ja0Nvb3JkIC0gMTApO1xuICAgICAgICBjaGVja1ZhbGlkQ29vcmQoY29vcmRzLCBibG9ja0Nvb3JkIC0gMTAgLSAxKTtcbiAgICAgICAgY2hlY2tWYWxpZENvb3JkKGNvb3JkcywgYmxvY2tDb29yZCAtIDEpO1xuICAgICAgICBjaGVja1ZhbGlkQ29vcmQoY29vcmRzLCBibG9ja0Nvb3JkICsgMTAgLSAxKTtcbiAgICAgICAgY2hlY2tWYWxpZENvb3JkKGNvb3JkcywgYmxvY2tDb29yZCArIDEwKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzsgKytpKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBqID0gLTE7IGogPCAyOyArK2opIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjb29yZCA9IGJsb2NrQ29vcmQgKyBvZmZzZXQgKyBqO1xuICAgICAgICAgICAgICAgIGlmIChjb29yZCA+PSAwICYmIGNvb3JkIDw9IDk5KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghQXJyYXkuZnJvbShidXR0b25zW2Nvb3JkXS5jbGFzc0xpc3QpLmluY2x1ZGVzKCdtYXJrZWQnKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvb3Jkcy5wdXNoKGNvb3JkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvZmZzZXQgKz0gMTA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZpbmRDb3JyZXNwb25kaW5nQmxvY2tzKGNvb3Jkcyk7XG59XG5mdW5jdGlvbiBjaGVja1ZhbGlkQ29vcmQoY29vcmRzLCBjb29yZCkge1xuICAgIGlmIChjb29yZCA+PSAwICYmIGNvb3JkIDw9IDk5KSB7XG4gICAgICAgIGlmICghQXJyYXkuZnJvbShidXR0b25zW2Nvb3JkXS5jbGFzc0xpc3QpLmluY2x1ZGVzKCdtYXJrZWQnKSlcbiAgICAgICAgICAgIGNvb3Jkcy5wdXNoKGNvb3JkKTtcbiAgICB9XG59XG5mdW5jdGlvbiBjb3VudEJvbWJzKGJsb2Nrcykge1xuICAgIGxldCBudW0gPSAwO1xuICAgIEFycmF5LmZyb20oYmxvY2tzKS5mb3JFYWNoKChibG9jaykgPT4ge1xuICAgICAgICBpZiAoY2hlY2tJZlRhcmdldElzQm9tYihibG9jaykpXG4gICAgICAgICAgICArK251bTtcbiAgICB9KTtcbiAgICByZXR1cm4gbnVtO1xufVxuZnVuY3Rpb24gY2hlY2tJZkJsb2Nrc0FyZUJvbWJzKGJsb2Nrcykge1xuICAgIGNvbnN0IG51bUJvbWJzID0gY291bnRCb21icyhibG9ja3MpO1xuICAgIGlmIChudW1Cb21icyA+IDApIHtcbiAgICAgICAgcmV0dXJuIG51bUJvbWJzO1xuICAgIH1cbiAgICBmb3IgKGxldCBibG9jayBvZiBibG9ja3MpIHtcbiAgICAgICAgY29uc3QgYW5vdGhlckJsb2NrcyA9IGdldFN1cnJvdW5kaW5nQmxvY2tzKGJsb2NrKTtcbiAgICAgICAgY2hlY2tJZkJsb2Nrc0FyZUJvbWJzKGFub3RoZXJCbG9ja3MpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGZpbmRDb3JyZXNwb25kaW5nQmxvY2tzKGNvb3Jkcykge1xuICAgIGNvbnN0IGJsb2NrcyA9IFtdO1xuICAgIGJ1dHRvbnMuZm9yRWFjaCgoYnRuKSA9PiB7XG4gICAgICAgIGNvb3Jkcy5mb3JFYWNoKChjcmQpID0+IHtcbiAgICAgICAgICAgIGlmIChwYXJzZUludChidG4uZGF0YXNldC5pZCkgPT09IGNyZClcbiAgICAgICAgICAgICAgICBibG9ja3MucHVzaChidG4pO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICByZXR1cm4gYmxvY2tzO1xufVxuZnVuY3Rpb24gaGFuZGxlR2FtZU92ZXIoKSB7XG4gICAgY29uc29sZS5sb2coJ0dBTUUgT1ZFUicpO1xuICAgIGJvYXJkLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlQnV0dG9uQ2xpY2spO1xufVxuZnVuY3Rpb24gZ2V0UmFuZG9tSW50KG1pbiwgbWF4KSB7XG4gICAgbWluID0gTWF0aC5jZWlsKG1pbik7XG4gICAgbWF4ID0gTWF0aC5mbG9vcihtYXgpO1xuICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSkpICsgbWluO1xufVxuZnVuY3Rpb24gZW5kc1dpdGgobnVtMSwgbnVtMikge1xuICAgIGlmIChudW0xICUgMTAgPT09IG51bTIpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBmYWxzZTtcbn1cbmZ1bmN0aW9uIHN0YXJ0c1dpdGgobnVtMSwgbnVtMikge1xuICAgIGlmIChNYXRoLmZsb29yKG51bTEgLyAxMCkgPT09IG51bTIpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBmYWxzZTtcbn1cbi8vIHRlc3QoOTApO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///607\n")}},__webpack_exports__={};__webpack_modules__[607]()})();